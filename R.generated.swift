//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var info: info { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func info(bundle: Foundation.Bundle) -> info {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 12 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `bg_xiala`.
    var bg_xiala: RswiftResources.ImageResource { .init(name: "bg_xiala", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_clean_select`.
    var ic_clean_select: RswiftResources.ImageResource { .init(name: "ic_clean_select", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_clean_selected`.
    var ic_clean_selected: RswiftResources.ImageResource { .init(name: "ic_clean_selected", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_fenlei`.
    var ic_fenlei: RswiftResources.ImageResource { .init(name: "ic_fenlei", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_like`.
    var ic_like: RswiftResources.ImageResource { .init(name: "ic_like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_remove`.
    var ic_remove: RswiftResources.ImageResource { .init(name: "ic_remove", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_save`.
    var ic_save: RswiftResources.ImageResource { .init(name: "ic_save", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_share`.
    var ic_share: RswiftResources.ImageResource { .init(name: "ic_share", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ic_xiangqing`.
    var ic_xiangqing: RswiftResources.ImageResource { .init(name: "ic_xiangqing", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photo`.
    var photo: RswiftResources.ImageResource { .init(name: "photo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `photo_fill`.
    var photo_fill: RswiftResources.ImageResource { .init(name: "photo_fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pic_empty`.
    var pic_empty: RswiftResources.ImageResource { .init(name: "pic_empty", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.info` struct is generated, and contains static references to 1 properties.
  struct info {
    let bundle: Foundation.Bundle
    var uiApplicationSceneManifest: uiApplicationSceneManifest { .init(bundle: bundle) }

    func uiApplicationSceneManifest(bundle: Foundation.Bundle) -> uiApplicationSceneManifest {
      .init(bundle: bundle)
    }

    struct uiApplicationSceneManifest {
      let bundle: Foundation.Bundle

      let uiApplicationSupportsMultipleScenes: Bool = false

      var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest"], key: "_key") ?? "UIApplicationSceneManifest" }
      var uiSceneConfigurations: uiSceneConfigurations { .init(bundle: bundle) }

      func uiSceneConfigurations(bundle: Foundation.Bundle) -> uiSceneConfigurations {
        .init(bundle: bundle)
      }

      struct uiSceneConfigurations {
        let bundle: Foundation.Bundle
        var _key: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations"], key: "_key") ?? "UISceneConfigurations" }
        var uiWindowSceneSessionRoleApplication: uiWindowSceneSessionRoleApplication { .init(bundle: bundle) }

        func uiWindowSceneSessionRoleApplication(bundle: Foundation.Bundle) -> uiWindowSceneSessionRoleApplication {
          .init(bundle: bundle)
        }

        struct uiWindowSceneSessionRoleApplication {
          let bundle: Foundation.Bundle
          var defaultConfiguration: defaultConfiguration { .init(bundle: bundle) }

          func defaultConfiguration(bundle: Foundation.Bundle) -> defaultConfiguration {
            .init(bundle: bundle)
          }

          struct defaultConfiguration {
            let bundle: Foundation.Bundle
            var uiSceneConfigurationName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneConfigurationName") ?? "Default Configuration" }
            var uiSceneDelegateClassName: String { bundle.infoDictionaryString(path: ["UIApplicationSceneManifest", "UISceneConfigurations", "UIWindowSceneSessionRoleApplication"], key: "UISceneDelegateClassName") ?? "$(PRODUCT_MODULE_NAME).SceneDelegate" }
          }
        }
      }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 1 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }
  }
}